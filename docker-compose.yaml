# docker-compose.yml
services:
  api:
    container_name: evolution_api
    image: evoapicloud/evolution-api:latest
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net
    env_file:
      - .env
    expose:
      - "8080"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - "6379:6379"
    networks:
      - evolution-net

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    command: [
      "postgres",
      "-c", "max_connections=200",
      "-c", "listen_addresses=*",
      "-c", "shared_buffers=256MB",
      "-c", "effective_cache_size=1GB",
      "-c", "work_mem=4MB"
    ]
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=evolution_db
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
    - postgres_data:/var/lib/postgresql/data
    networks:
      - evolution-net

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    env_file:
      - .env
    environment:
      - GENERIC_TIMEZONE=${TZ}
      - WEBHOOK_URL=http://localhost:5678/ # URL base para que n8n construya sus webhooks
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - evolution-net
    depends_on:
      - api

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:
  n8n_data: {} # AÃ±adido el volumen para n8n

networks:
  evolution-net:
    name: evolution-net
    driver: bridge